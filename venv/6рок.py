import sys
import sqlite3
from PyQt6.QtWidgets import (
    QApplication, QWidget, QVBoxLayout, QHBoxLayout,
    QLabel, QLineEdit, QPushButton, QMessageBox, QTextEdit
)

DB_NAME = "crud.db"

class CrudApp(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("CRUD –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: –ü–æ–∏—Å–∫ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        self.setGeometry(100, 100, 500, 400)
        self.setup_ui()
        self.init_db()

    def setup_ui(self):
        layout = QVBoxLayout()

        search_label = QLabel("üîç –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∏–º–µ–Ω–∏:")
        layout.addWidget(search_label)

        search_layout = QHBoxLayout()
        self.search_input = QLineEdit()
        self.search_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–ª–∏ –µ–≥–æ —á–∞—Å—Ç—å")
        search_btn = QPushButton("–ò—Å–∫–∞—Ç—å")
        search_btn.clicked.connect(self.search_user)

        search_layout.addWidget(self.search_input)
        search_layout.addWidget(search_btn)
        layout.addLayout(search_layout)

        self.results_area = QTextEdit()
        self.results_area.setReadOnly(True)
        layout.addWidget(self.results_area)

        delete_label = QLabel("üóë –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID:")
        layout.addWidget(delete_label)

        delete_layout = QHBoxLayout()
        self.delete_input = QLineEdit()
        self.delete_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        delete_btn = QPushButton("–£–¥–∞–ª–∏—Ç—å")
        delete_btn.clicked.connect(self.delete_user)

        delete_layout.addWidget(self.delete_input)
        delete_layout.addWidget(delete_btn)
        layout.addLayout(delete_layout)

        self.setLayout(layout)

    def init_db(self):
        conn = sqlite3.connect(DB_NAME)
        cursor = conn.cursor()
        cursor.execute("""
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT NOT NULL,
            email TEXT NOT NULL UNIQUE
        )
        """)
        conn.commit()

        cursor.execute("SELECT COUNT(*) FROM users")
        count = cursor.fetchone()[0]
        if count == 0:
            users = [
                ("Emily", "ramdilu@icloud.com"),
                ("Artur", "moloiikin@gmail.com"),
                ("Alex", "alexmukh@yandex.by")
            ]
            cursor.executemany("INSERT INTO users (name, email) VALUES (?, ?)", users)
            conn.commit()

        conn.close()

    def search_user(self):
        name = self.search_input.text().strip()
        if not name:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞", "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥–ª—è –ø–æ–∏—Å–∫–∞.")
            return

        conn = sqlite3.connect(DB_NAME)
        cursor = conn.cursor()
        cursor.execute(
            "SELECT id, name, email FROM users WHERE name LIKE ?",
            (f"%{name}%",)
        )
        rows = cursor.fetchall()
        conn.close()

        if rows:
            output = ""
            for row in rows:
                output += f"ID: {row[0]}, –ò–º—è: {row[1]}, Email: {row[2]}\n"
            self.results_area.setText(output)
        else: 
            self.results_area.setText("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω ")

    def delete_user(self):
        user_id = self.delete_input.text().strip()

        if not user_id.isdigit():
            QMessageBox.warning(self,"–û—â–∏–±–∫–∞ –∫–æ–¥–∞", "ID –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ")
            return
    
        reply = QMessageBox.question(
            self , "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è",
            f"–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–∂–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id}",
            QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No
        )

        if reply == QMessageBox.StandardButton.No:
            return

        conn = sqlite3.connect(DB_NAME)
        cursor = conn.cursor()
        cursor.execute("DELETE FROM users WHERE id =?",(int(user_id)))
        conn.commit()
        deleted = cursor.rowcount
        conn.close()

        if deleted > 0:
            QMessageBox.information(self, "–£—Å–ø–µ—Ö",f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID {user_id} —É–¥–∞–ª–µ–Ω")
            self.results_area.clear()
        else:
            QMessageBox.warning(self, "–û–®–ò–ë–ö–ê", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω ")

if __name__=="__main__":
    app = QApplication(sys.argv)
    window = CrudApp()
    window.show()
    sys.exit(app.exec())